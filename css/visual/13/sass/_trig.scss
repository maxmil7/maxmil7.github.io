//sin(x) = summation(n=0-10) (-1)^n/(2n+1)! * x^2n+1;
//cos(x) = summation(n=0-10) (-1)^n/(2n)! * x^2n;

//power function
@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  } @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }

  }
  @return $value;
}

//factorial function
@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}

//pi function
@function pi() {
  @return 3.14159265359;
}

//radians function
@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  //If angle has 'deg' as unit, conver to radians
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}

//sin function
@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  //Iterate a bunch of times
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i+1 )) / fact(2 * $i + 1);
  }
  @return $sin;
}

//cos function 
@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  //Iterate a bunch of times
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}

//tan function
@function tan($angle) {
  @return sin($angle) / cos($angle);
}

@debug sin(pi()/4);
@debug cos(45deg);
@debug tan(45deg);
